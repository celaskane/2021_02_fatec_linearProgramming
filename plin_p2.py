# -*- coding: utf-8 -*-
"""plin_p2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e6lyX_AL3RVHcsQzsqU8P-zl0Tv7eoFE
"""

# P2 de Programação Linear

# Diego Antonio Troncoso Salvio    RA: 2040482012010
# Leandro de Assis Madeira         RA: 2040482012007
# Pamela de Paula Francisco        RA: 2040482012009

MAX = 100;
n = 0;
 
recebe = [0] * MAX;
grafo = [[0 for i in range(MAX)] for j in range(MAX)];
d = [0] * MAX;  # Grau dos vértices
 
def eh_clique(b):
    for i in range(1, b):
        for j in range(i + 1, b):
            if (grafo[recebe[i]][recebe[j]] == 0):
                return False;
    return True;
 
def maxCliques(i, l):
    max_ = 0;
    for j in range(i + 1, n + 1):
        recebe[l] = j;
        if (eh_clique(l + 1)):
            max_ = max(max_, l);
            max_ = max(max_, maxCliques(j, l + 1));
    return max_;

if __name__ == '__main__':
    arestas = [[ 1, 2 ],[ 2, 3 ],[ 3, 1 ],
              [ 4, 3 ],[ 4, 1 ],[ 4, 2 ]];

    tamanho = len(arestas);
    n = 4;
 
    for i in range(tamanho):
        grafo[arestas[i][0]][arestas[i][1]] = 1;
        grafo[arestas[i][1]][arestas[i][0]] = 1;
        d[arestas[i][0]] += 1;
        d[arestas[i][1]] += 1;

    print(maxCliques(0, 1));